{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","words","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","console","log","target","value","backgroundColor","rows","newtext","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c8274cea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (words) => {\r\n        const lower = words.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n      props.alert && (\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n      )\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-light\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { \r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string.isRequired \r\n    // aboutText: PropTypes.string \r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set Title Here',\r\n    aboutText: 'About'\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert('Converted to Upper Case', 'success');\r\n    }\r\n    const handleLoClick = () => {\r\n      let newtext = text.toLowerCase();\r\n      setText(newtext);\r\n      props.showAlert(\"Converted to Lower Case\", \"success\");\r\n    };\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = ' ';\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log('On Change');\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"container\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n        >\r\n          <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n            {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n            <textarea\r\n              className=\"form-control\"\r\n              onChange={handleOnChange}\r\n              value={text}\r\n              id=\"myBox\"\r\n              style={{\r\n                backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n                color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              }}\r\n              rows=\"8\"\r\n            ></textarea>\r\n          </div>\r\n          <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n            Convert to UpperCase\r\n          </button>\r\n          <button className=\"btn btn-success mx-2\" onClick={handleLoClick}>\r\n            Convert to LowerCase\r\n          </button>\r\n          <button className=\"btn btn-success mx-2\" onClick={handleCopy}>\r\n            Copy Text\r\n          </button>\r\n          <button className=\"btn btn-success mx-2\" onClick={handleClearClick}>\r\n            Clear Text\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"container my-3\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n        >\r\n          <h2>Your Text Summary</h2>\r\n          <p>\r\n            {text.split(\" \").length} word and {text.length} characters\r\n          </p>\r\n          <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n          <h3>Preview</h3>\r\n          <p>{text.length > 0 ? text : 'Enter Something to Preview it on here'}</p>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n","// import About from \"./components/About\";\nimport { useState } from \"react/cjs/react.development\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About Utils\" /> */}\n      {/* <Navbar /> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route path=\"/about\" element={<About />}> */}\n              {/* <About /> */}\n            {/* </Route> */}\n            {/* <Route\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyse below\"\n                  showAlert={showAlert}\n                  mode={mode}\n                />\n              }\n            > */}\n              <TextForm heading=\"Enter the text to analyse below\" showAlert={showAlert} mode={mode} /> \n            {/* </Route> */}\n          {/* </Routes> */}\n          {/* <About /> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}